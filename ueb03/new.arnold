
test {
    name    = 1. Hilfeaufruf: Ausgabe
    comment = Hilfetext anfordern und ueberpruefen
    type    = param
    cmd       {DUT -h | diff - help.exp}
    expect    {^$}
}

test {
    name    = 2. Hilfeaufruf: Return code
    comment = Erwartet einen return code von 0 bei korrektem Hilfeaufruf
    type    = param
    cmd       {DUT -h 1>/dev/null && echo "ok"}
    expect    {^ok$}
}

test {
    name    = 2. Hilfeaufruf: Return code (zweite Variante zur Ueberpruefung)
    comment = Erwartet einen return code von 0 bei korrektem Hilfeaufruf
    type    = param
    cmd       {DUT -h 1>/dev/null ; echo "$?"}
    expect    {^0$}
}

test {
    name    = 3. Fehlerfall: Return code bei ungueltigem Aufruf (keine Parameter)
    comment = Der return code darf bei einem ungueltigen Programmaufruf nicht 0 sein.
    type    = param
    cmd       {DUT 2>/dev/null || echo "ungueltig"}
    expect    {^ungueltig$}
}

test {
    name    = 4. Fehlerfall: Return code bei ungueltigem Aufruf (ungueltiger Parameter)
    comment = Erwartet einen return code von 1 bei ungueltigen Aufruf
    type    = param
    cmd       {DUT -r 2>/dev/null || echo "fail"}
    expect    {^fail$}
}

test {
    name    = 5. Testet ob replace funktion geht
    comment = Erwartet test als expect
    type    = param
    cmd       {echo "aesa" | DUT -r a t}
    expect    {^test$}
}

test {
    name    = 6. Testet ob delete funktion geht
    comment = Löscht jedes Zeichen in einem Text auf stdin
    type    = param
    cmd       {echo "testd" | DUT -d d}
    expect    {^test$}
}

test {
    name    = 7. Testet ob uppercase funktion geht
    comment = Jedes Zeichen groß schreiben
    type    = param
    cmd       {echo "tEst" | DUT -u}
    expect    {^TEST$}
}

test {
    name    = 7. Testet ob uppercase funktion geht (--to-uppercase)
    comment = Jedes Zeichen groß schreiben
    type    = param
    cmd       {echo "teSt" | DUT --to-uppercase}
    expect    {^TEST$}
}

test {
    name    = 8. Testet ob lowercase funktion geht
    comment = Jedes Zeichen klein schreiben
    type    = param
    cmd       {echo "TesT" | DUT -l}
    expect    {^test$}
}

test {
    name    = 8. Testet ob lowercase funktion geht (--to-lowercase)
    comment = Jedes Zeichen klein schreiben
    type    = param
    cmd       {echo "TEST" | DUT --to-lowercase}
    expect    {^test$}
}

test {
    name    = 9. Jede Zeile einlesen
    comment = Testet ob er mehrere Zeilen liest
    type    = param
    cmd       {echo "TEST peter" | DUT -r e p}
    expect    {^TEST pptpr$}
}



